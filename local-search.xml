<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/10/23/hello-world/"/>
    <url>/2024/10/23/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post &quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>初识JS逆向</title>
    <link href="/2024/10/21/%E5%88%9D%E8%AF%86JS%E9%80%86%E5%90%91/"/>
    <url>/2024/10/21/%E5%88%9D%E8%AF%86JS%E9%80%86%E5%90%91/</url>
    
    <content type="html"><![CDATA[<h3 id="招标网"><a href="#招标网" class="headerlink" title="招标网"></a>招标网</h3><ol><li><p>url：<a href="https://ctbpsp.com/#/">https://ctbpsp.com/#/</a></p><ul><li><p>找到网络模块，筛选<code>XHR/Fetch</code>，刷新界面找到加密数据包。</p>  <img src="https://raw.githubusercontent.com/Yistroll/NoteImg/master/img/202410211250493.png" alt="image-20241021125015410" style="zoom: 33%;" /></li><li><p>查看启动器，发现有Promise对象在 JavaScript 中，<code>Promise.then()</code>是用于处理异步操作结果的方法。</p>  <img src="https://raw.githubusercontent.com/Yistroll/NoteImg/master/img/202410211308098.png" alt="image-20241021125737426" style="zoom: 67%;" /></li><li><p>多条数据一般会通过拦截器统一加密，搜索<code>interceptors.response.use</code>快速定位。</p>  <img src="https://raw.githubusercontent.com/Yistroll/NoteImg/master/img/202410211307417.png" alt="image-20241021130743495" style="zoom: 25%;" /></li><li><p>可以看到DES解密函数，打断点进入函数内，找到实现代码。</p>  <img src="https://raw.githubusercontent.com/Yistroll/NoteImg/master/img/202410211311280.png" alt="image-20241021131121485" style="zoom: 50%;" /></li><li><p>将代码拿到本地执行，用前面获取的加密参数进行测试。</p><ul><li><p>完成代码</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> <span class="hljs-title class_">CryptoJS</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;crypto-js&quot;</span>);<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">decryptByDES</span>(<span class="hljs-params">ciphertext</span>) &#123;<br>    <span class="hljs-keyword">let</span> keyHex = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-string">&quot;1qaz@wsx3e&quot;</span>);<br>    <span class="hljs-comment">//  ctpstp@custominfo!@#qweASD</span><br>    <span class="hljs-comment">// direct decrypt ciphertext</span><br>    <span class="hljs-keyword">let</span> decrypted = <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">DES</span>.<span class="hljs-title function_">decrypt</span>(&#123;<br>            <span class="hljs-attr">ciphertext</span>: <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">enc</span>.<span class="hljs-property">Base64</span>.<span class="hljs-title function_">parse</span>(ciphertext),<br>        &#125;,<br>        keyHex, &#123;<br>            <span class="hljs-attr">mode</span>: <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">mode</span>.<span class="hljs-property">ECB</span>,<br>            <span class="hljs-attr">padding</span>: <span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">pad</span>.<span class="hljs-property">Pkcs7</span>,<br>        &#125;<br>    );<br>    <span class="hljs-keyword">return</span> decrypted.<span class="hljs-title function_">toString</span>(<span class="hljs-title class_">CryptoJS</span>.<span class="hljs-property">enc</span>.<span class="hljs-property">Utf8</span>);<br>&#125;<br><br><span class="hljs-keyword">let</span> s = <span class="hljs-string">&quot;加密数据&quot;</span><br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">decryptByDES</span>(s))<br></code></pre></td></tr></table></figure></li><li><p>运行结果</p></li></ul>  <img src="https://raw.githubusercontent.com/Yistroll/NoteImg/master/img/202410211348500.png" alt="image-20241021134815114" style="zoom:33%;" /></li></ul></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
